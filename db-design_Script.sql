-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public.staff DROP CONSTRAINT IF EXISTS location_id_fk;

ALTER TABLE IF EXISTS public.sales_outlet DROP CONSTRAINT IF EXISTS manager_id_fk;

ALTER TABLE IF EXISTS public.sales_detail DROP CONSTRAINT IF EXISTS transaction_id_fk;

ALTER TABLE IF EXISTS public.sales_detail DROP CONSTRAINT IF EXISTS product_id_fk;

ALTER TABLE IF EXISTS public.product DROP CONSTRAINT IF EXISTS product_type_id_fk;

ALTER TABLE IF EXISTS public.sales_transaction DROP CONSTRAINT IF EXISTS sales_outlet_id_fk;

ALTER TABLE IF EXISTS public.sales_transaction DROP CONSTRAINT IF EXISTS customer_id_fk;

ALTER TABLE IF EXISTS public.sales_transaction DROP CONSTRAINT IF EXISTS staff_id_fk;



DROP TABLE IF EXISTS public.staff;

CREATE TABLE IF NOT EXISTS public.staff
(
    staff_id integer NOT NULL,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    "position" character varying(50) NOT NULL,
    start_date date NOT NULL,
    location_id integer NOT NULL,
    PRIMARY KEY (staff_id)
);

DROP TABLE IF EXISTS public.sales_outlet;

CREATE TABLE IF NOT EXISTS public.sales_outlet
(
    sales_outlet_id integer NOT NULL,
    sales_outlet_type character varying(50) NOT NULL,
    address character varying(75) NOT NULL,
    city character varying(35) NOT NULL,
    telephone character varying(21) NOT NULL,
    postal_code integer NOT NULL,
    manager_id integer NOT NULL,
    PRIMARY KEY (sales_outlet_id)
);

DROP TABLE IF EXISTS public.customer;

CREATE TABLE IF NOT EXISTS public.customer
(
    customer_id integer NOT NULL,
    customer_name character varying(55) NOT NULL,
    email character varying(50) NOT NULL,
    reg_date date NOT NULL,
    card_number character varying(20) NOT NULL,
    date_of_birth date NOT NULL,
    gender character(1) NOT NULL,
    PRIMARY KEY (customer_id),
    CONSTRAINT unique_attributes UNIQUE (card_number, email)
);

DROP TABLE IF EXISTS public.sales_detail;

CREATE TABLE IF NOT EXISTS public.sales_detail
(
    sales_detail_id integer NOT NULL,
    transaction_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    price money NOT NULL,
    PRIMARY KEY (sales_detail_id)
);

DROP TABLE IF EXISTS public.product;

CREATE TABLE IF NOT EXISTS public.product
(
    product_id integer NOT NULL,
    product_name character varying(165) NOT NULL,
    description character varying(221) NOT NULL,
    product_price money NOT NULL,
    product_type_id integer NOT NULL,
    PRIMARY KEY (product_id)
);

DROP TABLE IF EXISTS public.product_type;

CREATE TABLE IF NOT EXISTS public.product_type
(
    product_type_id integer NOT NULL,
    product_type character varying(50) NOT NULL,
    product_category character varying(50) NOT NULL,
    PRIMARY KEY (product_type_id)
);

DROP TABLE IF EXISTS public.sales_transaction;

CREATE TABLE IF NOT EXISTS public.sales_transaction
(
    transaction_id integer NOT NULL,
    transaction_date date NOT NULL,
    transaction_time time without time zone NOT NULL,
    sales_outlet_id integer NOT NULL,
    staff_id integer NOT NULL,
    customer_id integer NOT NULL,
    PRIMARY KEY (transaction_id)
);

DROP TABLE IF EXISTS public.location;

CREATE TABLE IF NOT EXISTS public.location
(
    location_id integer NOT NULL,
    location_name character varying(120) NOT NULL,
    location_address character varying(70) NOT NULL,
    PRIMARY KEY (location_id)
);

DROP TABLE IF EXISTS public.manager;

CREATE TABLE IF NOT EXISTS public.manager
(
    manager_id integer NOT NULL,
    manager_name character varying(55) NOT NULL,
    phone character varying(20) NOT NULL,
    email character varying(50),
    date_started date NOT NULL,
    PRIMARY KEY (manager_id)
);

ALTER TABLE IF EXISTS public.staff
    ADD CONSTRAINT location_id_fk FOREIGN KEY (location_id)
    REFERENCES public.location (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_outlet
    ADD CONSTRAINT manager_id_fk FOREIGN KEY (manager_id)
    REFERENCES public.manager (manager_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_detail
    ADD CONSTRAINT transaction_id_fk FOREIGN KEY (transaction_id)
    REFERENCES public.sales_transaction (transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_detail
    ADD CONSTRAINT product_id_fk FOREIGN KEY (product_id)
    REFERENCES public.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_type_id_fk FOREIGN KEY (product_type_id)
    REFERENCES public.product_type (product_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT sales_outlet_id_fk FOREIGN KEY (sales_outlet_id)
    REFERENCES public.sales_outlet (sales_outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT customer_id_fk FOREIGN KEY (customer_id)
    REFERENCES public.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sales_transaction
    ADD CONSTRAINT staff_id_fk FOREIGN KEY (staff_id)
    REFERENCES public.staff (staff_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;